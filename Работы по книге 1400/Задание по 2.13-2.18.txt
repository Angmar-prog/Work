2.13
#include <iostream>
using namespace std;

int main() {
    double a, b, x;

    // Ввод коэффициентов a и b
    cout << "Введите коэффициент a (a ≠ 0): ";
    cin >> a;

    if (a == 0) {
        cout << "Ошибка: коэффициент a не может быть равен нулю." << endl;
        return 1; // Выход из программы с кодом ошибки
    }

    cout << "Введите коэффициент b: ";
    cin >> b;

    // Вычисление корня уравнения
    x = -b / a;

    // Вывод результата
    cout << "Решение уравнения: x = " << x << endl;

    return 0;
}
___________________________________________
2.14
#include <iostream>
#include <cmath> // Для использования функции sqrt
using namespace std;

int main() {
    double a, b, c;

    // Ввод длин катетов
    cout << "Введите длину первого катета (a): ";
    cin >> a;

    if (a <= 0) {
        cout << "Ошибка: длина катета должна быть положительной." << endl;
        return 1; // Выход из программы с кодом ошибки
    }

    cout << "Введите длину второго катета (b): ";
    cin >> b;

    if (b <= 0) {
        cout << "Ошибка: длина катета должна быть положительной." << endl;
        return 1; // Выход из программы с кодом ошибки
    }

    // Вычисление гипотенузы
    c = sqrt(a * a + b * b);

    // Вывод результата
    cout << "Длина гипотенузы (c): " << c << endl;

    return 0;
}
______________________________________________
2.15
#include <iostream>
using namespace std;

int main() {
    double R, r, area;
    const double PI = 3.14159; // Значение числа π

    // Ввод внешнего и внутреннего радиусов
    cout << "Введите внешний радиус (R): ";
    cin >> R;

    if (R <= 0) {
        cout << "Ошибка: внешний радиус должен быть положительным." << endl;
        return 1; // Выход из программы с кодом ошибки
    }

    cout << "Введите внутренний радиус (r): ";
    cin >> r;

    if (r < 0 || r >= R) {
        cout << "Ошибка: внутренний радиус должен быть неотрицательным и меньше внешнего радиуса." << endl;
        return 1; // Выход из программы с кодом ошибки
    }

    // Вычисление площади кольца
    area = PI * (R * R - r * r);

    // Вывод результата
    cout << "Площадь кольца: " << area << endl;

    return 0;
}
_____________________________________________
2.16
#include <iostream>
#include <cmath> // Для использования функции sqrt
using namespace std;

int main() {
    double a, b, c, perimeter;

    // Ввод длин катетов
    cout << "Введите длину первого катета (a): ";
    cin >> a;

    if (a <= 0) {
        cout << "Ошибка: длина катета должна быть положительной." << endl;
        return 1; // Выход из программы с кодом ошибки
    }

    cout << "Введите длину второго катета (b): ";
    cin >> b;

    if (b <= 0) {
        cout << "Ошибка: длина катета должна быть положительной." << endl;
        return 1; // Выход из программы с кодом ошибки
    }

    // Вычисление гипотенузы
    c = sqrt(a * a + b * b);

    // Вычисление периметра
    perimeter = a + b + c;

    // Вывод результата
    cout << "Периметр прямоугольного треугольника: " << perimeter << endl;

    return 0;
}
_________________________________________
2.17
#include <iostream>
#include <cmath> // Для использования функции sqrt
using namespace std;

int main() {
    double a, b, h, c, perimeter;

    // Ввод данных
    cout << "Введите длину большего основания (a): ";
    cin >> a;

    if (a <= 0) {
        cout << "Ошибка: длина большего основания должна быть положительной." << endl;
        return 1; // Выход из программы с кодом ошибки
    }

    cout << "Введите длину меньшего основания (b): ";
    cin >> b;

    if (b <= 0 || b >= a) {
        cout << "Ошибка: длина меньшего основания должна быть положительной и меньше большего основания." << endl;
        return 1; // Выход из программы с кодом ошибки
    }

    cout << "Введите высоту трапеции (h): ";
    cin >> h;

    if (h <= 0) {
        cout << "Ошибка: высота должна быть положительной." << endl;
        return 1; // Выход из программы с кодом ошибки
    }

    // Вычисление боковой стороны
    c = sqrt(pow((a - b) / 2, 2) + pow(h, 2));

    // Вычисление периметра
    perimeter = a + b + 2 * c;

    // Вывод результата
    cout << "Периметр равнобедренной трапеции: " << perimeter << endl;

    return 0;
}